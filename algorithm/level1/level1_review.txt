1. 시저암호
아스키코드 변환 ord
char로 변환 chr
def solution(s, n):
    answer = ''
    for k in s:
        #알파벳인지 먼저 확인
        if k.isalpha():
            #소문자 대문자인지 확인
            if k.islower():
                answer += chr((ord(k) - ord("a") + n) % 26 + ord("a"))
            else:
                answer += chr((ord(k) - ord("A") + n) % 26 + ord("A"))
        else:
            answer += k
    return answer

2. 이상한 문자 만들기
.upper() .lower() 소문자 대문자 만들기

3. 자연수 뒤집어 배열로 만들기
스트링을 인트배열로 만들기
s_list = [int(x) for x in str(n)]
배열을 순서만 거꾸로하기
answer = list(reversed(s_list))
배열을 거꾸로 하기
num.sort(reverse=True)

4. 같은 숫자는 싫어
array[-1:]이 마지막 숫자 뜻하는 거
def solution(arr):
        a = []
        for i in arr:
            if a[-1:] == [i]: 
                continue
            a.append(i)
        return a

5.문자열 내 마음대로 정렬하기
key로 sort하는법 
def solution(strings, n):
    
    strings.sort()
    return sorted(strings, key=lambda x: x[n])

6. 이상한 문자 만들기
split과 join 주의
def solution(s):
    answer = ""
    answer_list = []

    s_list = s.lower().split(' ')

    #한단어씩
    for i in s_list:
        #단어에서 글자마다 홀수
        oneWord = ''
        for index, j in enumerate(i):
            if index % 2 == 0:
                oneWord += j.upper()
            else:
                oneWord += j
        answer_list.append(oneWord)
    answer = ' '.join(answer_list)
    return answer

7. 최소공배수 최대공약수
def gcdlcm(a, b):
    c, d = max(a, b), min(a, b)
    t = 1
    while t > 0:
        t = c % d
        c, d = d, t
    answer = [c, int(a*b/c)]

    return answer

8. 소수찾기
소수검사를 제곱근까지만 하면된다 리스트를 사용하는것이 속도가 훨씬 잘나온다.
def solution(n):
    primes = []
    if n < 2:
        return primes
    for i in range(2, n+1):
        isPrime = True
        for j in primes:
            if i % j == 0:
                isPrime = False
                break
            elif j > i**0.5:
                break
        if isPrime:
            primes.append(i)
    return len(primes)
